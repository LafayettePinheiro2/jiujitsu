<?php/** * Calls the class on the post edit screen. */function call_TheChameleon_Meta_Boxes() {    new TheChameleon_Meta_Boxes();}if ( is_admin() ) {    add_action( 'load-post.php', 'call_TheChameleon_Meta_Boxes' );    add_action( 'load-post-new.php', 'call_TheChameleon_Meta_Boxes' );}/**  * The Class. */class TheChameleon_Meta_Boxes extends TheChameleon {	/**	 * Hook into the appropriate actions when the class is constructed.	 */	 function __construct() {						parent::register_globals();				add_action( 'add_meta_boxes', array( $this, 'add_sidebars_meta_box' ) );		add_action( 'add_meta_boxes', array( $this, 'add_post_formats_support_meta_box' ) );			add_action( 'add_meta_boxes', array( $this, 'add_featured_media_meta_box' ) );		add_action( 'add_meta_boxes', array( $this, 'add_featured_audio_meta_box' ) );					add_action( 'add_meta_boxes', array( $this, 'add_page_builder_meta_box' ) );					add_action( 'save_post', array( $this, 'save' ) );			}	/**	 * Save the meta when the post is saved.	 *	 * @param int $post_id The ID of the post being saved.	 */	public function save( $post_id ) {			/*		 * We need to verify this came from the our screen and with proper authorization,		 * because save_post can be triggered at other times.		 */		// Check if our nonce is set.		if ( ! isset( $_POST['the_chameleon_custom_box_nonce'] ) )			return $post_id;		$nonce = $_POST['the_chameleon_custom_box_nonce'];		// Verify that the nonce is valid.		if ( ! wp_verify_nonce( $nonce, 'the_chameleon_custom_box' ) )			return $post_id;		// If this is an autosave, our form has not been submitted,                //     so we don't want to do anything.		if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) 			return $post_id;		// Check the user's permissions.		if ( 'page' == $_POST['post_type'] ) {			if ( ! current_user_can( 'edit_page', $post_id ) )				return $post_id;			} else {			if ( ! current_user_can( 'edit_post', $post_id ) )				return $post_id;		}		/* OK, its safe for us to save the data now. */				// Update the meta field.				if ( 'page' == $_POST['post_type'] ) :			//page bulder			update_post_meta( $post_id, 'page_builder', $_POST['page_builder']  );			endif;		//Save sidebars		update_post_meta( $post_id, 'sidebar_first', esc_attr( $_POST['sidebar_first'] ) );		update_post_meta( $post_id, 'sidebar_second', esc_attr( $_POST['sidebar_second'] ) );				if ( 'post' == $_POST['post_type'] ) :			//post format supports				update_post_meta( $post_id, 'link', esc_url( $_POST['link'] ) );			update_post_meta( $post_id, 'quote_author_name', esc_attr( $_POST['quote_author_name'] ) );					//featured media			update_post_meta( $post_id, 'featured_media', esc_attr( $_POST['featured_media'] ) );						//featured audio			update_post_meta( $post_id, 'featured_audio', esc_attr( $_POST['featured_audio'] ) );		endif;	}	/**	 * Adds Sidebar meta box container.	 */	public function add_sidebars_meta_box( $post_type ) {            $post_types = array('post', 'page');     //limit meta box to certain post types            if ( in_array( $post_type, $post_types )) {				add_meta_box(					'sidebars_meta_box'					,__( 'Sidebars', 'the_chameleon' )					,array( $this, 'sidebars_meta_box_content' )					,$post_type					,'side'					,'low'				);            }	}	/**	 * Sidebars Meta Box content.	 *	 * @param WP_Post $post The post object.	 */	public function sidebars_meta_box_content( $post ) {			// Add an nonce field so we can check for it later.		wp_nonce_field( 'the_chameleon_custom_box', 'the_chameleon_custom_box_nonce' );		// Use get_post_meta to retrieve an existing value from the database.		$value['sidebar_first']  = get_post_meta( $post->ID, 'sidebar_first', true );		$value['sidebar_second'] = get_post_meta( $post->ID, 'sidebar_second', true );		// Display the form, using the current value.		echo '<p><strong>'. __( 'Sidebar One', 'the_chameleon' ) . '</strong></p>';		echo Form::select('sidebar_first', array_combine( array_unique( $this->sidebars )  , array_unique( $this->sidebars )  ) , $value['sidebar_first'] , array('style'=>'width:100%;'));						echo '<p><strong>'. __( 'Sidebar Two', 'the_chameleon' ) . '</strong></p>';		echo Form::select('sidebar_second', array_combine( array_unique( $this->sidebars )  , array_unique( $this->sidebars )  ) , 	$value['sidebar_second'] , array('style'=>'width:100%;'));			}			/**	 * Adds Post formats meta box container.	 */	public function add_post_formats_support_meta_box( $post_type ) {            $post_types = array('post');     //limit meta box to certain post types            if ( in_array( $post_type, $post_types )) {				add_meta_box(					'post_formats_support_meta_box'					,__( 'Format Support', 'the_chameleon' )					,array( $this, 'post_formats_support_meta_box_content' )					,$post_type					,'side'					,'low'				);            }	}	/**	 * Post formats support Meta Box content.	 *	 * @param WP_Post $post The post object.	 */	public function post_formats_support_meta_box_content( $post ) {			// Add an nonce field so we can check for it later.		wp_nonce_field( 'the_chameleon_custom_box', 'the_chameleon_custom_box_nonce' );		// Use get_post_meta to retrieve an existing value from the database.		$value['link']  = get_post_meta( $post->ID, 'link', true );		$value['quote_author_name'] = get_post_meta( $post->ID, 'quote_author_name', true );		// Display the form, using the current value.		echo '<p><strong>'. __( 'Link', 'the_chameleon' ) . '</strong></p>';		echo Form::input( 'link', $value['link'] , array( 'style'=>'width:100%;', 'placeholder'=> __( 'Add link for link format', 'the_chameleon' ) ) );						echo '<p><strong>'. __( 'Author', 'the_chameleon' ) . '</strong></p>';		echo Form::input( 'quote_author_name', $value['quote_author_name'] , array( 'style'=>'width:100%;', 'placeholder'=> __( 'Add autor name for quote format', 'the_chameleon' ) ) );			}		/**	 * Adds Featured media meta box container.	 */	public function add_featured_media_meta_box( $post_type ) {            $post_types = array('post');     //limit meta box to certain post types            if ( in_array( $post_type, $post_types )) {				add_meta_box(					'featured_media_meta_box'					,__( 'Featured Media', 'the_chameleon' )					,array( $this, 'featured_media_meta_box_content' )					,$post_type					,'side'					,'low'				);            }	}	/**	 * Featured media Meta Box content.	 *	 * @param WP_Post $post The post object.	 */	public function featured_media_meta_box_content( $post ) {		// Add an nonce field so we can check for it later.		wp_nonce_field( 'the_chameleon_custom_box', 'the_chameleon_custom_box_nonce' );		// Use get_post_meta to retrieve an existing value from the database.		$value = get_post_meta( $post->ID, 'featured_media', true );		// Display the form, using the current value.		if ( !empty( $value ) ) : echo wp_oembed_get( $value, array('width'=>'100%', 'height'=>'250px') ) ; endif; 		 			wp_enqueue_media(); ?>					<script type="text/javascript" charset="utf-8">						jQuery(document).ready(function(){							//COVER UPDATE						 	var video_custom_uploader;						    jQuery('.select-video-link').click(function(e) {						        e.preventDefault();						        //If the uploader object has already been created, reopen the dialog						        if ( video_custom_uploader ) {						            video_custom_uploader.open();						            return;						        }						        //Extend the wp.media object						        video_custom_uploader = wp.media.frames.file_frame = wp.media({						            title: 'Select Video',						            button: {						                text: 'Select Video'						            },						            multiple: false						        });						        //When a file is selected, grab the URL and set it as the text field's value						        video_custom_uploader.on('select', function() {						            attachment = video_custom_uploader.state().get('selection').first().toJSON();											//resize image  and then save image										jQuery("input#featured_media").val(attachment.url);						        });						        //Open the uploader dialog						        video_custom_uploader.open();						  });					  });					</script>						<?php echo Form::input( 'featured_media', $value, array( 'style'=>"width:100%", 'id'=>'featured_media', 'placeholder'=>__( 'Here add media url', 'the_chameleon' ) ) ); ?>				<br />				<p class="hide-if-no-js"><a href="#" class="select-video-link"><?php _e( 'Set featured video', 'the_chameleon' ) ?></a></p>			<p><a href="http://codex.wordpress.org/Embeds#Okay.2C_So_What_Sites_Can_I_Embed_From.3F" target="_blank"><i><?php _e( 'Okay, So What Sites Can I Embed From?', 'the_chameleon' ) ?></i></a></p>							<?php	}	/**	 * Adds Featured Audio meta box container.	 */	public function add_featured_audio_meta_box( $post_type ) {            $post_types = array('post');     //limit meta box to certain post types            if ( in_array( $post_type, $post_types )) {				add_meta_box(					'featured_audio_meta_box'					,__( 'Featured Audio', 'the_chameleon' )					,array( $this, 'featured_audio_meta_box_content' )					,$post_type					,'side'					,'low'				);            }	}	/**	 * Featured Audio Meta Box content.	 *	 * @param WP_Post $post The post object.	 */	public function featured_audio_meta_box_content( $post ) {		// Add an nonce field so we can check for it later.		wp_nonce_field( 'the_chameleon_custom_box', 'the_chameleon_custom_box_nonce' );		// Use get_post_meta to retrieve an existing value from the database.		$value = get_post_meta( $post->ID, 'featured_audio', true );		// Display the form, using the current value.		if ( !empty( $value ) ) : echo wp_audio_shortcode(  array( 'src'=>$value, 'width'=>'100%') ) ; endif; 		 			wp_enqueue_media(); ?>					<script type="text/javascript" charset="utf-8">						jQuery(document).ready(function(){							//COVER UPDATE						 	var video_custom_uploader;						    jQuery('.select-audio-link').click(function(e) {						        e.preventDefault();						        //If the uploader object has already been created, reopen the dialog						        if ( video_custom_uploader ) {						            video_custom_uploader.open();						            return;						        }						        //Extend the wp.media object						        video_custom_uploader = wp.media.frames.file_frame = wp.media({						            title: 'Select Audio',						            button: {						                text: 'Select Audio'						            },						            multiple: false						        });						        //When a file is selected, grab the URL and set it as the text field's value						        video_custom_uploader.on('select', function() {						            attachment = video_custom_uploader.state().get('selection').first().toJSON();											//resize image  and then save image										jQuery("input#featured_audio").val(attachment.url);						        });						        //Open the uploader dialog						        video_custom_uploader.open();						  });					  });					</script>						<?php echo Form::input( 'featured_audio', $value, array( 'style'=>"width:100%", 'id'=>'featured_audio', 'placeholder'=>__( 'Here add audio MP3 url', 'the_chameleon' ) ) ); ?>				<br />				<p class="hide-if-no-js"><a href="#" class="select-audio-link"><?php _e( 'Set featured audio', 'the_chameleon' ) ?></a></p>							<?php	}		/**	 * Adds Page bulder formats meta box container.	 */	public function add_page_builder_meta_box( $post_type ) {            $post_types = array('page');     //limit meta box to certain post types            if ( in_array( $post_type, $post_types )) {				add_meta_box(					'page_builder_meta_box'					,__( 'The Chameleon Page Bulder', 'the_chameleon' )					,array( $this, 'page_builder_meta_box_content' )					,$post_type					,'advanced'						,'high'				);            }	}	/**	 * Page bilder Meta Box content.	 *	 * @param WP_Post $post The post object.	 */	public function page_builder_meta_box_content( $post ) {			// Add an nonce field so we can check for it later.		wp_nonce_field( 'the_chameleon_custom_box', 'the_chameleon_custom_box_nonce' );		// Use get_post_meta to retrieve an existing value from the database.		$value  = get_post_meta( $post->ID, 'page_builder', true );		$sidebars = array_combine( array_unique( $this->sidebars )  , array_unique( $this->sidebars )  ); 		$columns  = array_unique( $this->column_options ); 		$wraps 	  = array(						''			=> __( 'Select Wrap', 'the_chameleon' ) , 						'normal'	=> __( 'Normal', 'the_chameleon' ) , 						'stretch'	=> __( 'Stretch', 'the_chameleon' ) , 						'fullwidth' => __( 'Full Width', 'the_chameleon' ) );							//TOP		echo '<p><strong>'. __( 'Top', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[top_sidebar]", array_merge( $sidebars, array(''=> __( 'Select Sidebar', 'the_chameleon' ) )  ) ,  ( $value and $value['top_sidebar'] ) ? $value['top_sidebar'] : '');		echo Form::select("page_builder[top_col]", 	  array_merge(  array( '' => __( 'Select Columns', 'the_chameleon' ) ), $columns ) ,  ( $value and $value['top_col'] ) ? $value['top_col'] : '');			echo Form::select("page_builder[top_wrap]",    $wraps ,  												( $value and $value['top_wrap'] ) ? $value['top_wrap'] : '');			//Block A		echo '<p><strong>'. __( 'Block A', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[block_a_sidebar]", array_merge( $sidebars, array(''=>__( 'Select Sidebar', 'the_chameleon' ) )  ) ,  ( $value and $value['block_a_sidebar'] ) ? $value['block_a_sidebar'] : '');		echo Form::select("page_builder[block_a_col]",     array_merge( array( '' => __( 'Select Columns', 'the_chameleon' ) ), $columns   ) ,  ( $value and $value['block_a_col'] ) ? $value['block_a_col'] : '' );			echo Form::select("page_builder[block_a_wrap]",    $wraps , 												 ( $value and $value['block_a_wrap'] ) ? $value['block_a_wrap'] : '' );		//Block B		echo '<p><strong>'. __( 'Block B', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[block_b_sidebar]", array_merge( $sidebars, array(''=> __( 'Select Sidebar', 'the_chameleon' ) )  ) ,  ( $value and $value['block_b_sidebar'] ) ? $value['block_b_sidebar'] : '' );		echo Form::select("page_builder[block_b_col]", 	  array_merge( array( '' => __( 'Select Columns', 'the_chameleon' ) ), $columns   ) ,  ( $value and $value['block_b_col'] ) ? $value['block_b_col'] : '' );				//Block C		echo '<p><strong>'. __( 'Block C', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[block_c_sidebar]", array_merge( $sidebars, array( '' => __( 'Select Sidebar', 'the_chameleon' ) )  ) , 	( $value and $value['block_c_sidebar'] ) ? $value['block_c_sidebar'] : '' );		echo Form::select("page_builder[block_c_col]", 	  array_merge( array( '' => __( 'Select Columns', 'the_chameleon' ) ), $columns   ) , 	( $value and $value['block_c_col'] ) ? $value['block_c_col'] : '' );									//Block D		echo '<p><strong>'. __( 'Block D', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[block_d_sidebar]", array_merge( $sidebars, array( '' => __( 'Select Sidebar', 'the_chameleon' ) )  ) , ( $value and $value['block_d_sidebar'] ) ? $value['block_d_sidebar'] : '' );		echo Form::select("page_builder[block_d_col]", 	  array_merge( array( '' => __( 'Select Columns', 'the_chameleon' ) ), $columns   ) , ( $value and $value['block_d_col'] ) ? $value['block_d_col'] : '' );						//Block E		echo '<p><strong>'. __( 'Block E', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[block_e_sidebar]", array_merge( $sidebars, array( '' => __( 'Select Sidebar', 'the_chameleon' ))  ) , ( $value and $value['block_e_sidebar'] ) ? $value['block_e_sidebar'] : '' );		echo Form::select("page_builder[block_e_col]", 	  array_merge( array( '' =>  __( 'Select Columns', 'the_chameleon' ) ), $columns   ) , ( $value and $value['block_e_col'] ) ? $value['block_e_col'] : '' );				//Bottom		echo '<p><strong>'. __( 'Bottom', 'the_chameleon' ) . '</strong></p>';			echo Form::select("page_builder[bottom_sidebar]", array_merge( $sidebars, array( '' => __( 'Select Sidebar', 'the_chameleon' ) )  ) , ( $value and $value['bottom_sidebar'] ) ? $value['bottom_sidebar'] : '' );		echo Form::select("page_builder[bottom_col]", 	 array_merge( array( '' =>  __( 'Select Columns', 'the_chameleon' ) ), $columns   ) , ( $value and $value['bottom_col'] ) ? $value['bottom_col'] : '' );			echo Form::select("page_builder[bottom_wrap]", 	$wraps , 												  ( $value and $value['bottom_wrap'] ) ? $value['bottom_wrap'] : '' );						echo '<p id="no-comments">'. __( 'Use sidebars and widget system to builde your custom page.', 'the_chameleon' ) . '</p>';			}	} ?>